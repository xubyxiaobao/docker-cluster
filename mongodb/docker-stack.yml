version: '3.8'
services:
  mongodb1:
    image: ${REGISTRY}${mongodb_image}
    ports:
      - target: 27017
        published: ${mongodb_out_port}
        protocol: tcp
        mode: host
    deploy:
      mode: replicated
      placement:
        constraints:
          - node.labels.nodename==${NODE1_TAG}
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 10
        window: 120s
      resources:
        limits:
          memory: ${mongodb_container_memory}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${mongodb_admin}
      MONGO_INITDB_ROOT_PASSWORD: ${mongodb_password}
    volumes:
      - mongodb1-data-volume:/data/db
      - mongodb1-config-volume:/data/configdb
    networks:
      ddc_network:
        aliases:
          - mongodb1
    entrypoint:
      - docker-entrypoint.sh
      - mongod
      - --replSet
      - rs
      - --keyFile
      - /data/mongodb.key
  mongodb2:
    image: ${REGISTRY}${mongodb_image}
    ports:
      - target: 27017
        published: ${mongodb_out_port}
        protocol: tcp
        mode: host
    deploy:
      mode: replicated
      placement:
        constraints:
          - node.labels.nodename==${NODE2_TAG}
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 10
        window: 120s
      resources:
        limits:
          memory: ${mongodb_container_memory}
    depends_on:
      - mongodb1
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${mongodb_admin}
      MONGO_INITDB_ROOT_PASSWORD: ${mongodb_password}
    volumes:
      - mongodb2-data-volume:/data/db
      - mongodb2-config-volume:/data/configdb
    networks:
      ddc_network:
        aliases:
          - mongodb2
    entrypoint:
      - docker-entrypoint.sh
      - mongod
      - --replSet
      - rs
      - --keyFile
      - /data/mongodb.key
  mongodb3:
    image: ${REGISTRY}${mongodb_image}
    ports:
      - target: 27017
        published: ${mongodb_out_port}
        protocol: tcp
        mode: host
    deploy:
      mode: replicated
      placement:
        constraints:
          - node.labels.nodename==${NODE3_TAG}
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 10
        window: 120s
      resources:
        limits:
          memory: ${mongodb_container_memory}
    depends_on:
      - mongodb1
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${mongodb_admin}
      MONGO_INITDB_ROOT_PASSWORD: ${mongodb_password}
    volumes:
      - mongodb3-data-volume:/data/db
      - mongodb3-config-volume:/data/configdb
    networks:
      ddc_network:
        aliases:
          - mongodb3
    entrypoint:
      - docker-entrypoint.sh
      - mongod
      - --replSet
      - rs
      - --keyFile
      - /data/mongodb.key
volumes:
  mongodb1-data-volume:
  mongodb1-config-volume:
  mongodb2-data-volume:
  mongodb2-config-volume:
  mongodb3-data-volume:
  mongodb3-config-volume:
networks:
  ddc_network:
    external: true
    name: ${NETWORK}