version: '3.8'
services:
  zoo1:
    image: zookeeper:3.6.1
    hostname: zoo1
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
    volumes:
      - zoo1-data-volume:/data
      - zoo1-datalog-volume:/datalog
      - zoo1-log-volume:/logs
    networks:
      ddc_network:
  zoo2:
    image: zookeeper:3.6.1
    hostname: zoo2
    ports:
      - 2182:2181
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=0.0.0.0:2888:3888;2181 server.3=zoo3:2888:3888;2181
    volumes:
      - zoo2-data-volume:/data
      - zoo2-datalog-volume:/datalog
      - zoo2-log-volume:/logs
    networks:
      ddc_network:
  zoo3:
    image: zookeeper:3.6.1
    hostname: zoo3
    ports:
      - 2183:2181
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=0.0.0.0:2888:3888;2181
    volumes:
      - zoo3-data-volume:/data
      - zoo3-datalog-volume:/datalog
      - zoo3-log-volume:/logs
    networks:
      ddc_network:
  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    ports:
      - 9092
    environment:
      KAFKA_LISTENERS: PLAINTEXT://:9092
      PORT_COMMAND: "docker port $$(hostname) 9092/tcp | cut -d: -f2"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.33.22:_{PORT_COMMAND}
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
    volumes:
      - kafka-data-volume:/kafka
      -  /var/run/docker.sock:/var/run/docker.sock
    networks:
      ddc_network:
volumes:
  zoo1-data-volume:
  zoo1-datalog-volume:
  zoo1-log-volume:
  zoo2-data-volume:
  zoo2-datalog-volume:
  zoo2-log-volume:
  zoo3-data-volume:
  zoo3-datalog-volume:
  zoo3-log-volume:
  kafka-data-volume: 
networks:
  ddc_network: